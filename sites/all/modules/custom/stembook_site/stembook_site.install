<?php

/**
 * @file
 * Install, update and uninstall functions for the prf_feature module.
 */

/**
 * Implements hook_install().
 */
function stembook_site_install() {
  // This is a new module, so make sure to fire the update functions upon
  // installation.
  stembook_site_update_7001();
  stembook_site_update_7002();
  stembook_site_update_7003();
  // stembook_site_update_7004() not necessary.
  stembook_site_update_7005();
  stembook_site_update_7006();
  stembook_site_update_7007();
  stembook_site_update_7008();
  stembook_site_update_7009();
  stembook_site_update_7010();
}

/**
 * Disable menu links which are no longer used. (they are kept as legacy in
 * case they need to be revived later).
 */
function stembook_site_update_7001() {
  $menu_links = array(
    '<front>',
    'contents',
    'node/382',
    'node/745',
    'node/384',
    'node/383',
    'node/712',
  );
  foreach ($menu_links as $menu_link) {
    db_update('menu_links')
      ->fields(array('hidden' => 1))
      ->condition('link_path', $menu_link)
      ->execute();
  }
  menu_rebuild();
}

/**
 * Enable new theme.
 */
function stembook_site_update_7002() {
  theme_enable(array('sbo2'));
  variable_set('theme_default', 'sbo2');
}

/**
 * Disable blocks which are now in context or irrelevant.
 */
function stembook_site_update_7003() {
  $blocks = array(
    // Footer message
    'block-5', // site mission
    'block-6',
    'block-7',
    'block-8',
    'views-stories-block_1',
    'views-stories_past-block_1',
  );
  foreach ($blocks as $block) {
    preg_match('/([^-]*)-(.*)/', $block, $matches);
    $module = $matches[1];
    $delta = $matches[2];
    foreach(array('block', 'block_node_type', 'block_role') as $table) {
      db_delete($table)
        ->condition('module', $module)
        ->condition('delta', $delta)
        ->execute();
    }
  }
}

/**
 * Re-install biblio.
 */
function stembook_site_update_7004() {
  $result = db_query("SELECT * FROM {node} WHERE type='biblio' ");
  foreach  ($result as $node ) {
    db_query('DELETE FROM {node} WHERE nid = :nid', array(':nid' => $node->nid));
    db_query('DELETE FROM {node_revision} WHERE nid = :nid', array(':nid' => $node->nid));

    // Remove this node from the search index if needed.
    if (function_exists('search_wipe')) {
      search_wipe($node->nid, 'node');
    }
  }

  $vars = db_query("SELECT * FROM {variable} WHERE name LIKE 'biblio_%'");
  foreach ($vars as $var) {
    variable_del($var->name);
  }

  drupal_uninstall_schema('biblio');
  drupal_uninstall_schema('biblio_pm');
  db_delete('system')
    ->condition('name', 'biblio')
    ->execute();
  db_delete('system')
    ->condition('name', 'biblio_pm')
    ->execute();

  cache_clear_all();
}

/**
 * Install cell biblio style.
 */
function stembook_site_update_7005() {
  module_enable(array('biblio_citeproc'));
  cache_clear_all();
  module_load_include('inc', 'biblio_citeproc', 'biblio_citeproc.admin');
  _install_csl_from_github('cell.csl');
}

/**
 * Uninstall search module.
 */
function stembook_site_update_7006() {
  module_disable(array('search'), FALSE);
  require_once DRUPAL_ROOT . '/includes/install.inc';
  drupal_uninstall_modules(array('search'), FALSE);
}

/**
 * Delete old stembook_protocols view.
 */
function stembook_site_update_7007() {
  views_get_view('stembook_protocols')->delete();
}

/**
 * Delete old member and newsarticle nodes and content type.
 */
function stembook_site_update_7008() {
  // Delete actual nodes first.
  $results = db_query("SELECT nid FROM {node} WHERE type='newsarticle'");
  foreach  ($results as $node) {
    node_delete($node->nid);
  }
  // Delete content type.
  node_type_delete('newsarticle');
  node_type_cache_reset();

  // Delete actual nodes first.
  $results = db_query("SELECT nid FROM {node} WHERE type='member'");
  foreach  ($results as $node) {
    node_delete($node->nid);
  }
  // Delete content type.
  node_type_delete('member');
  node_type_cache_reset();
}

/**
 * Delete some variables.
 */
function stembook_site_update_7009() {
  variable_del('site_frontpage');
  variable_del('file_directory_path');
  variable_del('file_public_path');
}

/**
 * Force a url alias for node/384/top-menu-link.
 */
function stembook_site_update_7010() {
  db_insert('url_alias')
    ->fields(array(
      'source' => 'node/384/top-menu-link',
      'alias' => 'resources',
      'language' => 'und',
    ))
    ->execute();
}

/**
 * Disable history section in user profiles. This settings isn't supported
 * by features.
 */
function stembook_site_update_7011() {
  // Get current bundle settings.
  $bundle_settings = field_bundle_settings('user', 'user');
  // Save data for 'extra' summary / history field.
  $bundle_settings['extra_fields']['display']['summary']['default'] = array(
    'weight' => 0,
    'visible' => FALSE,
  );
  // Save updated bundle settings.
  field_bundle_settings('user', 'user', $bundle_settings);
}

/**
 * Set weight of profile display to -1 so that the flags appear below.
 * This settings isn't supported by features.
 * Flag items seem to have a weight of 0 which cannot be configured.
 */
function stembook_site_update_7012() {
  // Get current bundle settings.
  $bundle_settings = field_bundle_settings('user', 'user');
  // Save data for 'extra' summary / history field.
  $bundle_settings['extra_fields']['display']['profile_scf_members_profile']['default'] = array(
    'weight' => -1,
    'visible' => TRUE,
  );
  // Save updated bundle settings.
  field_bundle_settings('user', 'user', $bundle_settings);
}

/**
 * Remove field_scf_members_publication field which was removed from feature.
 */
function stembook_site_update_7013() {
  field_delete_field('field_scf_members_publication');
  field_sync_field_status();
  // For some reason we need to run the purge many times until the tmp tables
  // are deleted.
  field_purge_batch('10');
  field_purge_batch('10');
  field_purge_batch('10');
}
